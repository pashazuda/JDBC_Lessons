package com.jdbc.starter;

import org.postgresql.Driver;

import java.sql.*;

import com.jdbc.starter.utill.ConnectionManager;

public class JdbcRunner {
    public static void main(String[] args) throws SQLException {
        Class<Driver> driverClass = Driver.class;
//        String sql = """
//                CREATE TABLE IF NOT EXISTS info (
//                id SERIAL PRIMARY KEY,
//                data TEXT NOT NULL
//                );
//                """;
//        String sql = """
//                INSERT INTO info (data)
//                VALUES
//                ('Test1'),
//                ('Test2'),
//                ('Test3'),
//                ('Test4')
//                ;
//                 INSERT INTO info (data)
//                VALUES
//                ('Test1'),
//                ('Test2'),
//                ('Test3'),
//                ('Test4')
//                ;
//                """;
//        String sql = """
//                UPDATE info
//                SET data = 'TestTest1'
//                WHERE id = 5
//                RETURNING *;
//                """;
//        String sql = """
//                SELECT *
//                FROM ticket
//                """;
        String sql = """
                INSERT INTO info (data)
                VALUES ('autogeneratedData')
                """;
        try (var connection = ConnectionManager.open();
             // по умолчанию createStatement() read only
//        var statement = connection.createStatement()) {
             var statement = connection.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE)) {
            System.out.println(connection.getSchema());
            System.out.println(connection.getTransactionIsolation());
//            var executeResult = statement.execute(sql);
            var executeResult = statement.executeUpdate(sql, Statement.RETURN_GENERATED_KEYS);
            ResultSet generatedKeys = statement.getGeneratedKeys();
            if (generatedKeys.next()) {
                var generatedId = generatedKeys.getInt("id");
                System.out.println(generatedId);
            }

//            var executeResult = statement.executeQuery(sql);
            System.out.println(executeResult);
//            System.out.println(statement.getUpdateCount()
//            while (executeResult.next()){
//                System.out.println(executeResult.getLong("id"));
//                System.out.println(executeResult.getString("passenger_name"));
//                System.out.println(executeResult.getBigDecimal("cost"));
////                executeResult.updateLong("id", 1000);
////                executeResult.previous();
////                executeResult.first();
//                System.out.println("-----");
//            }

        }

    }
}
